# About:
# This action runs when a non-doc Pull Request has been made to the
# stack directory or any of it subdirectories. This action will test
# in the same manner the Addon Service applies K8s 1-clicks,
# using the deploy.sh script and relaying on rollout status to
# confirm a successfull deploy. This action does NOT test
# functionality in the k8 1-click app.

# Note:
# A DigitalOcean token needs to be saved in the repo 
# Settings --> Secrets with the name, "DIGITALOCEAN_ACCESS_TOKEN"
# DigitalOcean Tokens doc: 
#   https://www.digitalocean.com/docs/apis-clis/api/create-personal-access-token/
# 
# A 2vCPU 2GB Memory 3 Node cluster in SFO2 is spun up to test. The cluster
# name includes the Pull Request number. 
# Once the rollout finishes the cluster is deleted.
# 
# This action also makes use of the DOCTL Action:
#   https://github.com/digitalocean/action-doctl

name: DigitalOcean Kubernetes Test
on:
  pull_request:
    # Do not test if the only update was a doc update,
    # ie new or edit of an existing markdown file.
    # Only test if a change was made to the stacks subdirectories.
    # This assumes any change to source would have to be rendered.
    paths:
    - 'stacks/**'
    - '!***'
#    - '!stacks/**/*.md'

jobs:

  build:
    name: Identify Addon Slug and K8s Rollout Test
    runs-on: ubuntu-latest
    steps:

      # Leverage the GitHub API was easier than diffing aginast how actions checkouts out the PR branch.
      # jq and cut used to save just the Addon Slug string.
    - name: Identify and set the Addon Slug as an environmental variable
      id: vars
      run: echo ::set-env name=ADDON_SLUG::"`curl -sS https://api.github.com/repos/arosales/marketplace-kubernetes/pulls/${{ github.event.pull_request.number }}/files |  jq  -r '.[] | .filename' | cut -d/ -f2`"

    - name: Checkout marketplace-kubernetes repo
      uses: actions/checkout@master

    - name: Log the Addon Slug to test
      run: echo ${{ env.ADDON_SLUG }}
  
    - name: Spin up k8s
      run: |
        sudo snap install doctl
        sudo snap connect doctl:kube-config
        doctl auth init
        doctl kubernetes cluster create --region sfo2 --tag gh-test-pr --size s-2vcpu-2gb --count 3 test-gh-mp-k8s-${{ github.event.pull_request.number }}
        doctl kubernetes cluster kubeconfig save test-gh-mp-k8s-${{ github.event.pull_request.number }}
        sh stacks/${{ env.ADDON_SLUG }}/deploy.sh
         
#    - name: Create DigitalOcean Kubernetes test cluster (3 node 2vCPU 2GB)
#      uses: digitalocean/action-doctl@master
#      env:
#        DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
#      with:
#        args: kubernetes cluster create --region sfo2 --tag gh-test-pr --size s-2vcpu-2gb --count 3 test-gh-mp-k8s-${{ github.event.pull_request.number }}

#    - name: Save kubeconfig to GitHub Workspace
#      uses: digitalocean/action-doctl@master
#      env:
#        DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
#      with:  
#        args: kubernetes cluster kubeconfig show test-gh-mp-k8s-${{ github.event.pull_request.number }} > $GITHUB_WORKSPACE/.kubeconfig

      # GitHub actions was unhappy with read and execute (555) permissions.
      #         sudo chmod 777 stacks/${{ env.ADDON_SLUG }}/deploy.sh
#    - name: Deploy proposed new or updated deploy.sh to test K8s cluster
#      run: |
#        sudo chmod 777 $GITHUB_WORKSPACE/.kubeconfig
#        export KUBECONFIG=$GITHUB_WORKSPACE/.kubeconfig
#        sh stacks/${{ env.ADDON_SLUG }}/deploy.sh
    - name: Delete DigitalOcean Kubernetes test cluster
      uses: digitalocean/action-doctl@master
      env:
        DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      with:
        args: kubernetes cluster delete --force test-gh-mp-k8s-${{ github.event.pull_request.number }}
