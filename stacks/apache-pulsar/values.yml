## Chart: apache/pulsar
## Ref: https://github.com/apache/pulsar-helm-chart/blob/pulsar-2.9.3/charts/pulsar
##

###
### Global Settings
###

## Set to true on install
initialize: false

## Components
##
## Control what components of Apache Pulsar to deploy for the cluster
components:
  # zookeeper
  zookeeper: true
  # bookkeeper
  bookkeeper: true
  # bookkeeper - autorecovery
  autorecovery: true
  # broker
  broker: true
  # functions
  functions: true
  # proxy
  proxy: true
  # toolset
  toolset: true
  # pulsar manager
  pulsar_manager: true

## Monitoring Components
##
## Control what components of the monitoring stack to deploy for the cluster
##
## Usually, users will have a separate Prometheus setup so disabling below components
monitoring:
  # monitoring - prometheus
  prometheus: false
  # monitoring - grafana
  grafana: false
  # monitoring - node_exporter
  node_exporter: false
  # alerting - alert-manager
  alert_manager: false

## AntiAffinity
##
## Ensures pods of the same component can run on different nodes
##
## Flag to enable and disable `AntiAffinity` for all components.
## This is a global setting that is applied to all components.
## If you need to disable AntiAffinity for a component, you can set
## the `affinity.anti_affinity` settings to `false` for that component.
affinity:
  anti_affinity: false

## Bookkeeper settings
##
bookkeeper:
  # The number of Bookkeeper instances to run.
  replicaCount: 2
  # Enable this PodMonitor to discover proxy scrape targets (Prometheus-Operator needs to be installed first)
  # Prometheus-Operator does not add scrape targets based on k8s annotations
  podMonitor:
    enabled: false
    interval: 10s
    scrapeTimeout: 10s
  volumes:
    persistence: true
    journal:
      name: journal
      size: 10Gi
      local_storage: false
      # If you use another storage class for Bookkeeper journal, you can change it below
      storageClassName: do-block-storage
    ledgers:
      name: ledgers
      size: 10Gi
      local_storage: false
      # If you use another storage class for Bookkeeper ledgers, you can change it below
      storageClassName: do-block-storage

## Broker settings
##
broker:
  # The number of broker instances to run.
  replicaCount: 2
  # Enable this PodMonitor to discover proxy scrape targets (Prometheus-Operator needs to be installed first)
  # Prometheus-Operator does not add scrape targets based on k8s annotations
  podMonitor:
    enabled: false
    interval: 10s
    scrapeTimeout: 10s

## Proxy settings
##
proxy:
  # The number of proxy instances to run.
  replicaCount: 2
  # Enable this PodMonitor to discover proxy scrape targets (Prometheus-Operator needs to be installed first)
  # Prometheus-Operator does not add scrape targets based on k8s annotations
  podMonitor:
    enabled: false
    interval: 10s
    scrapeTimeout: 10s

## Zookeeper settings
##
zookeeper:
  # The number of zookeeper instances to run. 
  # It should be an odd number larger than or equal to 3.
  replicaCount: 3
  # Enable this PodMonitor to discover proxy scrape targets (Prometheus-Operator needs to be installed first)
  # Prometheus-Operator does not add scrape targets based on k8s annotations
  podMonitor:
    enabled: false
    interval: 10s
    scrapeTimeout: 10s
  volumes:
    persistence: true
    data:
      name: data
      size: 10Gi
      local_storage: false
      # If you use another storage class for Zookeeper data, you can change it below
      storageClassName: do-block-storage

## Pulsar Manager Settings
##
pulsar_manager:
  # The number of Pulsar Manager instances to run. 
  replicaCount: 1
  # Don't expose to the public for security reasons
  service:
    type: ClusterIP
